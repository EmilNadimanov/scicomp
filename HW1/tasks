######
TASK1##
########
Exercise: Compute the truth table for NOT:
X | NOT X
--|-------
0 |   1
1 |   0
######
TASK2##
########
Exercise: Compute the truth table table for AND.
X | Y |   X AND Y   |
--|---|-------------|
0 | 0 |      0      |
1 | 0 |      0      |
0 | 1 |      0      | 
1 | 1 |      1      |

######
TASK3##
########
Exercise: Prove De Morgan's theorem, NOT(X OR Y) = NOT(X) AND NOT(Y), by completing the table and checking the last two columns are the same.
X | Y | NOT(X OR Y) | NOT(X) AND NOT(Y)
--|---|-------------|-------------------
0 | 0 |      1      |        1
1 | 0 |      0      |        0
0 | 1 |      0      |        0
1 | 1 |      0      |        0

######
TASK4##
########
Exercise: Without listing explicitly, how many possible 8-bit binary numbers are there?
2^8 = 256

######
TASK5##
########
Exercise: Convert X = 110 to decimal.
2^2 + 2^1 = 6

##########
TASKS 6-8##
############
Exercise: Convert 11 to binary.
11 - 2^3 = 3
1 _ _ _

3 - 2^1 = 1
1 0 1 _

1 - 2^0 = 0

1 0 1 1   =>   answer is 1011

Exercise: Convert these powers of 2 into binary: 2, 4, 8, 16, 32. What do you notice?

2 => 10
4 => 100
8 => 1000
16 => 10000
32 => 100000
I notice that Nth powers of 2 in binary consist of a 1 on (N+1)st position from the right and N-1 zeros 

Exercise: Convert these numbers into binary: 1, 3, 7, 15, 31 (they are all 2^n - 1 for some n). What do you notice?

1 => 1
3 => 11
7 => 111
15 => 1111
31 => 11111
These are (2^N)-1, in binary they are represented by N-1 ones 

#######
TASK 9##
########
Exercise: check that these numbers all have the same 3-bit representation: 3 = 11 = 17, 0 = 8 = 16, 2 = 10 = 18.

3 =  011
11 = 1|011
17 = 10|001
NO THEY DON'T

0 =     000
8 =   1|000
16 = 10|000
Yes they do

2 =     010
10 =  1|010
18 = 10|010
Yes

########
TASK 10##
##########

binary:
1 + 1 = 10
single bit
2 => 1|0 => 0

########
TASK 11##
##########

single-bit multiplication
X0 | Y0 | Z0
---|----|----
0  | 0  | 0
1  | 0  | 0
0  | 1  | 0
1  | 1  | 1
logicla AND implements single-bit multiplication

########
TASK 12##
##########
    POWER
      |
    -----
    | R |
    -----
      |---- OUT
    -----
A --| T |
    -----
      |
    -----
B --| T |
    -----
      |
    GROUND

1 = high energy = True
0 = low energy = False

A | B | GROUND |
--|---|--------|
0 | 0 |   0    |  -- lost energy due to A being low energy
0 | 1 |   0    |  -- same 
1 | 0 |   0    |  -- lost energy due to B being low energy
1 | 1 |   1    |  -- did not lose any power and reached GROUND

#######
#TASKS ON NETWORKING
######

Exercise: show that every IPv4 can be represented by four 8bit unsigned integers, and that every 8bit unsigned integer is between 0 and 255.

Well, 255 is the top integer value achievable when we have 8 bits to use:
11111111 => 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 = 127 + 128 = 255
every IPV4 addres is four of those, 32 bits total.
it can range from 0.0.0.0 to 255.255.255.255

Exercise: how many IPv4 addresses are there? Is it enough? Explain.
2^32 is a lot: 4,294,967,296
Is it eough? Well, it used to be certainly enough 40 years ago, but people are worrying about the exhaustion of IPv4 for decades now. That's why IPv6 is used in some cases.

Exercise: use ping in a terminal to resolve a domain name. Copy-paste the command you used, and the result.
>>> ping linuxhint.com                                                    [2]
PING linuxhint.com (8.36.41.26) 56(84) bytes of data.
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=1 ttl=47 time=208 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=2 ttl=47 time=268 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=3 ttl=47 time=188 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=4 ttl=47 time=210 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=5 ttl=47 time=262 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=6 ttl=47 time=360 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=7 ttl=47 time=177 ms
64 bytes from cloudhost-2095278.us-midwest-1.nxcli.net (8.36.41.26): icmp_seq=8 ttl=47 time=302 ms
^C
--- linuxhint.com ping statistics --
8 packets transmitted, 8 received, 0% packet loss, time 7005ms

Exercise: The Multipath TCP project aims to allow TCP packets to be split across multiple network links and reassembled at the destination. For example, if you were uploading a 100 megabyte file to a server from your phone, it would allow you to send 75 megabytes by WiFi and 25 megabytes by cellular automatically. How should the ratio be chosen if you want to minimise transmission time? Minimise cellular bandwidth use? Explain.
To minimise transmitttion time we must maximize bandwidth and minimize latency for both WiFi and cellular.The channel must be reliable too, because if data is lost while channeled by TCP protocol it will be sent again until it succeffsully reaches the destination. 
To minimize bandwidth use we must maximize WiFi bandwidth and only use cellular if WiFi bandwidth is not sufficient.

Exercise: UDP is popular for streaming media; explain why.
Because using UDP we do not send lost data once again, which makes sence for streaming: if we receive and consume sontent real-time, we would prefer losing packages then watching video in which sounds and frames arrive to out device in disorder.
